{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import re\n",
    "import csv\n",
    "from tkinter import filedialog\n",
    "from tkinter import Tk\n",
    "\n",
    "# Function to extract first name, last name, email, phone number, and address from a string\n",
    "def extract_info(text):\n",
    "    first_name = re.search(r'\\b[A-Z][a-z]*\\b', text)\n",
    "    last_name = re.search(r'\\b[A-Z][a-z]*\\b', text)\n",
    "    email = re.search(r'\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b', text)\n",
    "    phone = re.search(r'\\b\\d{3}[-.\\s]?\\d{3}[-.\\s]?\\d{4}\\b', text)\n",
    "    address = re.search(r'\\b\\d+\\s\\w+\\s\\w+\\b', text)\n",
    "\n",
    "    return first_name.group() if first_name else None, last_name.group() if last_name else None, \\\n",
    "           email.group() if email else None, phone.group() if phone else None, address.group() if address else None\n",
    "\n",
    "# Read data from the text file\n",
    "with open('your_data_file.txt', 'r') as file:\n",
    "    data = file.readlines()\n",
    "\n",
    "# Create a list to store extracted data\n",
    "extracted_data = []\n",
    "\n",
    "# Extract information from each line in the data file\n",
    "for line in data:\n",
    "    first_name, last_name, email, phone, address = extract_info(line)\n",
    "    extracted_data.append({'FirstName': first_name, 'LastName': last_name, 'Email': email,\n",
    "                           'PhoneNumber': phone, 'Address': address})\n",
    "\n",
    "# Ask the user for the save location and file name\n",
    "root = Tk()\n",
    "root.withdraw()\n",
    "file_path = filedialog.asksaveasfilename(defaultextension=\".csv\", filetypes=[(\"CSV files\", \"*.csv\")])\n",
    "\n",
    "if file_path:\n",
    "    # Save the extracted data to the chosen CSV file\n",
    "    with open(file_path, 'w', newline='') as csv_file:\n",
    "        fieldnames = ['FirstName', 'LastName', 'Email', 'PhoneNumber', 'Address']\n",
    "        writer = csv.DictWriter(csv_file, fieldnames=fieldnames)\n",
    "\n",
    "        # Write the header\n",
    "        writer.writeheader()\n",
    "\n",
    "        # Write the data\n",
    "        for row in extracted_data:\n",
    "            writer.writerow(row)\n",
    "\n",
    "    print(f\"Data saved to {file_path}\")\n",
    "else:\n",
    "    print(\"Save operation canceled.\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
